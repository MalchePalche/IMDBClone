@model IMDBClone.ViewModels.MovieDetailsViewModel
@using Microsoft.AspNetCore.Identity
@using IMDBClone.Models
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Movie Details";
}

<div class="container mt-5">
    <!-- Main Movie Info -->
    <div class="card shadow-lg rounded-4 mb-4">
        <div class="card-body d-flex flex-wrap align-items-start">
            <div class="me-4 mb-3" style="max-width: 250px;">
                <img src="@Model.Movie.PosterUrl" alt="@Model.Movie.Title Poster" class="img-fluid rounded shadow" />
            </div>
            <div>
                <h2>@Model.Movie.Title (@Model.Movie.ReleaseYear)</h2>
                <h5 class="text-muted">Directed by: @Model.Movie.Director</h5>
                <span class="badge bg-info mb-2">@Model.GenreName</span>
                <p class="mt-2">@Model.Movie.Description</p>
            </div>
        </div>
    </div>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        var isInWatchlist = Model.IsInWatchlist;
        <form asp-controller="Watchlist" asp-action="@(isInWatchlist ? "Remove" : "Add")" method="post" class="mt-3">
            <input type="hidden" name="movieId" value="@Model.Movie.Id" />
            <button type="submit" class="btn btn-outline-warning">
                @(isInWatchlist ? "Remove from Watchlist" : "Add to Watchlist")
            </button>
        </form>
    }

    <!-- Trailer Section -->
    @if (!string.IsNullOrEmpty(Model.TrailerUrl))
    {
        <div class="card shadow-sm rounded-3 mb-4">
            <div class="card-body">
                <h4 class="mb-3">🎬 Official Trailer</h4>
                <div class="ratio ratio-16x9">
                    @{
                        var embedUrl = Model.TrailerUrl?.Replace("watch?v=", "embed/");
                    }
                    <div class="ratio ratio-16x9">
                        <iframe src="@embedUrl" title="Trailer for @Model.Movie.Title" allowfullscreen></iframe>
                    </div>

                </div>
            </div>
        </div>
    }

    <!-- Actors Section -->
    <div class="card shadow-sm rounded-3 mb-4">
        <div class="card-body">
            <h4 class="mb-3">🎭 Cast</h4>
            @if (!string.IsNullOrEmpty(Model.Actors))
            {
                <p>@Model.Actors</p>
            }
            else
            {
                <p class="text-muted">No actor information available.</p>
            }
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="card shadow-sm rounded-3 mb-4">
        <div class="card-body text-light">
            <h4 class="mb-3">📝 User Reviews</h4>
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                <ul class="list-group bg-transparent border-0">
                    @foreach (var review in Model.Reviews)
                    {
                        <li class="list-group-item bg-dark text-light mb-3 rounded shadow-sm border border-secondary review-card">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <strong>@review.UserName</strong> rated it:
                                    <span class="text-warning fw-bold">
                                        @string.Concat(Enumerable.Repeat("⭐", review.Rating))
                                    </span>
                                    <br />
                                    <span class="fst-italic">@review.Comment</span>
                                </div>
                                @if (User.IsInRole("Admin"))
                                {
                                    <form asp-controller="MoviesPage" asp-action="DeleteReview" asp-route-id="@review.Id" method="post" class="d-inline delete-review-form">
                                        <button type="button" class="btn btn-danger btn-sm ms-2" style="background-color: #ffffff; border: none; color: white;" onclick="confirmDelete(this)">❌</button>
                                    </form>
                                }
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted">No reviews yet.</p>
            }
        </div>
    </div>

    <!-- Leave a Review -->
    @if (User.Identity?.IsAuthenticated ?? false)
    {
        <div class="card shadow-lg rounded-4 mb-5">
            <div class="card-body text-light">
                <h4 class="mb-3">⭐ Leave a Review</h4>
                <form asp-action="AddReview" method="post">
                    <input type="hidden" name="movieId" value="@Model.Movie.Id" />

                    <div class="mb-3">
                        <label class="form-label">Your Rating</label>
                        <div id="starRating" class="mb-2">
                            <span class="star" data-value="1">&#9734;</span>
                            <span class="star" data-value="2">&#9734;</span>
                            <span class="star" data-value="3">&#9734;</span>
                            <span class="star" data-value="4">&#9734;</span>
                            <span class="star" data-value="5">&#9734;</span>
                        </div>
                        <input type="hidden" id="rating" name="rating" required />
                    </div>

                    <div class="mb-3">
                        <label for="comment" class="form-label">Comment</label>
                        <textarea class="form-control bg-dark text-light border-secondary" id="comment" name="comment" rows="3" required></textarea>
                    </div>

                    <button type="submit" class="btn btn-success w-100">Submit Review</button>
                </form>
            </div>
        </div>
    }
    else
    {
        <p class="text-muted fst-italic">You must be logged in to leave a review.</p>
    }
</div>

<!-- SweetAlert2 Script -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function confirmDelete(button) {
        Swal.fire({
            title: 'Are you sure?',
            text: "This review will be permanently deleted!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                button.closest('form').submit();
            }
        });
    }

    // Star rating logic
    const stars = document.querySelectorAll('#starRating .star');
    const ratingInput = document.getElementById('rating');

    stars.forEach(star => {
        star.addEventListener('mouseover', function () {
            const value = parseInt(this.getAttribute('data-value'));
            highlightStars(value);
        });

        star.addEventListener('mouseout', function () {
            const selectedValue = parseInt(ratingInput.value) || 0;
            highlightStars(selectedValue);
        });

        star.addEventListener('click', function () {
            const value = parseInt(this.getAttribute('data-value'));
            ratingInput.value = value;
            highlightStars(value);
        });
    });

    function highlightStars(count) {
        stars.forEach(star => {
            if (parseInt(star.getAttribute('data-value')) <= count) {
                star.classList.add('selected');
            } else {
                star.classList.remove('selected');
            }
        });
    }

    // Fade-in animation for reviews
    window.addEventListener('load', () => {
        const reviews = document.querySelectorAll('.review-card');
        reviews.forEach((card, index) => {
            setTimeout(() => {
                card.classList.add('show');
            }, index * 150); // Staggered delay between each card
        });
    });
</script>

<style>
    /* Star Rating */
    #starRating {
        font-size: 2rem;
        color: gray;
        cursor: pointer;
    }

        #starRating .star.selected {
            color: gold;
        }

        #starRating .star:hover {
            transform: scale(1.2);
            transition: transform 0.2s;
        }

    /* Fade-In Reviews */
    .review-card {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

        .review-card.show {
            opacity: 1;
            transform: translateY(0);
        }
</style>
